# Environment Variables for Shopiet Observability Setup
# This file should be saved as .env in your project root

# =============================================
# Application Configuration
# =============================================
SECRET_KEY=your-super-secret-django-key-change-this-in-production
DEBUG=True
ENVIRONMENT=development
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# =============================================
# Database Configuration
# =============================================
POSTGRES_DB=shopiet_db
POSTGRES_USER=shopiet_user
POSTGRES_PASSWORD=shopiet_password
POSTGRES_HOST=db
POSTGRES_PORT=5432

# =============================================
# Redis Configuration
# =============================================
REDIS_URL=redis://redis:6379/0

# =============================================
# AWS Configuration (Required for ADOT)
# =============================================
# Replace with your actual AWS credentials
AWS_REGION=us-east-1
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key

# AWS Service Endpoints (optional, will use defaults if not set)
AWS_XRAY_ENDPOINT=
AWS_CLOUDWATCH_ENDPOINT=
AWS_PROMETHEUS_ENDPOINT=

# =============================================
# OpenTelemetry Configuration
# =============================================
ENABLE_OPENTELEMETRY=True
OTEL_SERVICE_NAME=shopiet-backend
OTEL_SERVICE_VERSION=1.0.0
OTEL_SERVICE_NAMESPACE=shopiet

# OTLP Endpoints
OTEL_EXPORTER_OTLP_ENDPOINT=http://adot-collector:4318
OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://adot-collector:4318/v1/traces
OTEL_EXPORTER_OTLP_METRICS_ENDPOINT=http://adot-collector:4318/v1/metrics
OTEL_EXPORTER_OTLP_LOGS_ENDPOINT=http://adot-collector:4318/v1/logs

# Optional OTLP Headers for authentication
OTEL_EXPORTER_OTLP_HEADERS=

# Resource Attributes
OTEL_RESOURCE_ATTRIBUTES=service.name=shopiet-backend,service.version=1.0.0,deployment.environment=development

# =============================================
# Tracing Configuration
# =============================================
TRACE_SAMPLING_RATE=1.0
ENABLE_QUERY_TRACING=True
ENABLE_REDIS_TRACING=True
ENABLE_HTTP_TRACING=True
TRACE_REQUEST_HEADERS=True
TRACE_RESPONSE_HEADERS=False

# =============================================
# Metrics Configuration
# =============================================
CUSTOM_METRICS_ENABLED=True
METRICS_NAMESPACE=shopiet
PROMETHEUS_METRICS_EXPORT_PORT=8001
PROMETHEUS_METRICS_EXPORT_ADDRESS=0.0.0.0
METRICS_EXPORT_INTERVAL=30000

# =============================================
# AWS CloudWatch Configuration
# =============================================
CLOUDWATCH_LOG_GROUP=/aws/shopiet/backend
CLOUDWATCH_LOG_STREAM=django-app
CLOUDWATCH_METRICS_NAMESPACE=Shopiet/Application

# =============================================
# AWS X-Ray Configuration
# =============================================
XRAY_TRACING_NAME=Shopiet-Backend
XRAY_CONTEXT_MISSING=LOG_ERROR

# =============================================
# Amazon Managed Prometheus Configuration
# =============================================
# Replace with your actual Prometheus Remote Write endpoint
PROMETHEUS_REMOTE_WRITE_ENDPOINT=https://aps-workspaces.us-east-1.amazonaws.com/workspaces/ws-xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/api/v1/remote_write

# =============================================
# Custom Backend Configuration
# =============================================
# If you want to send data to a custom observability backend
CUSTOM_OTLP_ENDPOINT=
CUSTOM_OTLP_HEADERS=

# =============================================
# Frontend Configuration
# =============================================
VITE_API_URL=http://localhost:8000
VITE_APP_VERSION=1.0.0
VITE_ENVIRONMENT=development
VITE_OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://localhost:4318/v1/traces
VITE_ENABLE_OBSERVABILITY=true

# =============================================
# Health Check Configuration
# =============================================
HEALTH_CHECK_ENABLED=True
HEALTH_CHECK_URL=/health/

# =============================================
# Performance Configuration
# =============================================
ENABLE_PERFORMANCE_MONITORING=True
PERFORMANCE_SAMPLING_RATE=1.0

# =============================================
# Security Configuration
# =============================================
# Enable/disable sensitive data collection
COLLECT_USER_DATA=True
MASK_SENSITIVE_DATA=True
ENABLE_DATA_PRIVACY=True

# =============================================
# Development/Debug Configuration
# =============================================
# Enable verbose logging for development
OTEL_LOG_LEVEL=INFO
ENABLE_DEBUG_METRICS=True
ENABLE_CONSOLE_EXPORTER=True

# =============================================
# Load Testing Configuration
# =============================================
# Configuration for load testing scenarios
ENABLE_LOAD_TEST_MODE=False
LOAD_TEST_SAMPLING_RATE=0.1

# =============================================
# Business Logic Configuration
# =============================================
# Enable tracking of business-specific events
TRACK_USER_ACTIONS=True
TRACK_API_USAGE=True
TRACK_DATABASE_OPERATIONS=True
TRACK_CACHE_OPERATIONS=True
TRACK_AUTHENTICATION_EVENTS=True

# =============================================
# Storage Configuration
# =============================================
# File storage for persistent queues
OTEL_FILE_STORAGE_PATH=/tmp/otelcol-filestore

# =============================================
# Alert Configuration
# =============================================
# Thresholds for alerting (used by monitoring tools)
ERROR_RATE_THRESHOLD=0.05
RESPONSE_TIME_THRESHOLD=2000
CPU_USAGE_THRESHOLD=80
MEMORY_USAGE_THRESHOLD=80

# =============================================
# Backup Configuration
# =============================================
# Backup endpoints in case primary fails
BACKUP_OTLP_ENDPOINT=
BACKUP_METRICS_ENDPOINT=
BACKUP_LOGS_ENDPOINT=

# =============================================
# Integration Configuration
# =============================================
# Third-party integrations
SLACK_WEBHOOK_URL=
PAGERDUTY_INTEGRATION_KEY=
EMAIL_NOTIFICATION_ENDPOINT=

# =============================================
# Compliance Configuration
# =============================================
# Data retention and compliance settings
DATA_RETENTION_DAYS=30
ENABLE_GDPR_COMPLIANCE=True
ENABLE_PII_SCRUBBING=True

# =============================================
# Advanced Configuration
# =============================================
# Advanced OpenTelemetry settings
OTEL_TRACES_SAMPLER=parentbased_traceidratio
OTEL_TRACES_SAMPLER_ARG=1.0
OTEL_METRICS_EXEMPLAR_FILTER=trace_based
OTEL_LOGS_EXPORTER=otlp
OTEL_PROPAGATORS=tracecontext,baggage,b3

# =============================================
# Container Orchestration Configuration
# =============================================
# Kubernetes/Docker Swarm specific settings
CONTAINER_ORCHESTRATOR=docker
CLUSTER_NAME=shopiet-local
NODE_NAME=shopiet-node-1

# =============================================
# Network Configuration
# =============================================
# Network settings for observability
NETWORK_TIMEOUT=30s
MAX_CONNECTIONS=100
RETRY_ATTEMPTS=3

# Note: Make sure to update the following:
# 1. Replace AWS credentials with your actual values
# 2. Update the Prometheus Remote Write endpoint with your workspace URL
# 3. Change the SECRET_KEY to a secure value
# 4. Adjust sampling rates based on your traffic volume
# 5. Configure alert thresholds based on your SLAs
